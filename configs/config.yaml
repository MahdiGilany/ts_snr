# ========================
# TOP LEVEL CONFIG FILE
# ========================

# ********* IMPORTANT *********
# THIS SHOULD NOT BE MODIFIED.
# IT CAN BE SAFELY IGNORED.
# To configure your experiment, you need to create a new experiment config file, 
# in the configs/experiment folder.
# You can use the configs/experiment/exp_default folder as a template.
# Then run the program by specifying the path to your experiment config file, e.g.:
# `python main.py experiment=exp_default.yaml`
# Experiments are distinguished by their names. No runs shall have the same name,
# unless you want to create new sub-directory under the same name by passing new_dir=True.
# Or you want to resume the previous run with the same name accessed by passing resume_run=True.
# This loads the latest sub-directory of the experiments with the same name.
# *****************************

# This is the top level config file for the project.
# It only specifies certain defaults that are used by all experiments.
# It mainly configures hydra defaults, and assigns a name to the experiment.
defaults:
  - _self_
  - log_dir: logdir_default
  - driver: globalforecasting_driver_default
  - experiment: null

  # optional local config for machine/user specific settings
  # it's optional since it doesn't need to exist and is excluded from version control
  - optional local: default.yaml

  # enable color logging
  - override hydra/hydra_logging: default # colorlog
  - override hydra/job_logging: default # colorlog
  # - override hydra/sweeper: optuna
  
# default name for the experiment, determines logging folder path
# (you can overwrite this name in experiment configs)
name: name_of_experiment

seed: 0
batch_size: 32
epochs: 50
save_checkpoints: True

new_dir: False # if True, creates a new directory for this run with the same experiment name
resume_run: False # if True, resumes the latest run with the same experiment name
train_stage1: True # if True, trains stage 1

resume_id: ${oc.env:RESUME_ID,null} # if you set RUN_ID it may be used to resume previous runs
id: 0 # unique id for this run
###################### not used block
# resume_id: ${oc.env:RESUME_ID,null} # if you set RUN_ID it may be used to resume previous runs
# id: 0 # unique id for this run
# id: ${uuid:} # unique id for this run

# path to original working directory
# hydra hijacks working directory by changing it to the new log directory
# https://hydra.cc/docs/next/tutorials/basic/running_your_app/working_directory
#######################

original_work_dir: ${hydra:runtime.cwd}