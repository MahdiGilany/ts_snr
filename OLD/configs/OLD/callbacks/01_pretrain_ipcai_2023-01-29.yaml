
# handles callbacks for tuffc, with online evaluation done individually for each center

defaults: 
  - /callbacks/online_eval@online_finetune: online_finetune
  - /callbacks/online_eval@online_evaluation: online_evaluation
  - /callbacks/online_eval@control: control
  - override /datamodule@online_finetune.datamodule: sl_datamodule_ipcai_2023
  - override /datamodule@online_evaluation.datamodule: sl_datamodule_ipcai_2023
  - override /datamodule@control.datamodule: sl_datamodule_ipcai_2023
  - override /datamodule/splits@online_finetune.datamodule.splits: all_centers
  - override /datamodule/splits@online_evaluation.datamodule.splits: all_centers
  - override /datamodule/splits@control.datamodule.splits: all_centers
  
online_finetune: 
  prefix: 
    online_finetune
online_evaluation: 
  prefix: 
    lin_eval
control: 
  prefix: 
    control

#  - override /datamodule/splits@online_evaluation.datamodule.splits: ${driver.config.datamodule.splits} # not tested
       
#log_dataset_info: 
#  _target_: src.lightning.callbacks.log_dataset_info.LogDatasetInfo
      
model_checkpoint:
  _target_: pytorch_lightning.callbacks.ModelCheckpoint
  monitor: vicreg_validation/vicreg_loss # name of the logged metric which determines when model is improving
  mode: "min" # "max" means higher metric value is better, can be also "min"
  save_top_k: 1 # save k best models (determined by above metric)
  save_last: True # additionaly always save model from last epoch
  verbose: False
  dirpath: checkpoints/
  filename: "epoch_{epoch:03d}"
  auto_insert_metric_name: False

model_summary:
  _target_: pytorch_lightning.callbacks.RichModelSummary
  max_depth: -1

progress_bar: 
  _target_: pytorch_lightning.callbacks.TQDMProgressBar
  #_target_: pytorch_lightning.callbacks.RichProgressBar

#logger_checkpoint: 
#  _target_: src.lightning.callbacks.wandb_checkpoint.WandbLoggerCheckpoint

learning_rate_monitor: 
  _target_: pytorch_lightning.callbacks.LearningRateMonitor

